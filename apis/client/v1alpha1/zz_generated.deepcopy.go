//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsInitParameters) DeepCopyInto(out *AddonsInitParameters) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureSb != nil {
		in, out := &in.AzureSb, &out.AzureSb
		*out = make([]AzureSbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Box != nil {
		in, out := &in.Box, &out.Box
		*out = make([]BoxInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Cloudbees != nil {
		in, out := &in.Cloudbees, &out.Cloudbees
		*out = make([]CloudbeesInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Concur != nil {
		in, out := &in.Concur, &out.Concur
		*out = make([]ConcurInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Dropbox != nil {
		in, out := &in.Dropbox, &out.Dropbox
		*out = make([]DropboxInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Echosign != nil {
		in, out := &in.Echosign, &out.Echosign
		*out = make([]EchosignInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egnyte != nil {
		in, out := &in.Egnyte, &out.Egnyte
		*out = make([]EgnyteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firebase != nil {
		in, out := &in.Firebase, &out.Firebase
		*out = make([]FirebaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Layer != nil {
		in, out := &in.Layer, &out.Layer
		*out = make([]LayerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mscrm != nil {
		in, out := &in.Mscrm, &out.Mscrm
		*out = make([]MscrmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Newrelic != nil {
		in, out := &in.Newrelic, &out.Newrelic
		*out = make([]NewrelicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Office365 != nil {
		in, out := &in.Office365, &out.Office365
		*out = make([]Office365InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rms != nil {
		in, out := &in.Rms, &out.Rms
		*out = make([]RmsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Salesforce != nil {
		in, out := &in.Salesforce, &out.Salesforce
		*out = make([]SalesforceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceAPI != nil {
		in, out := &in.SalesforceAPI, &out.SalesforceAPI
		*out = make([]SalesforceAPIInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceSandboxAPI != nil {
		in, out := &in.SalesforceSandboxAPI, &out.SalesforceSandboxAPI
		*out = make([]SalesforceSandboxAPIInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Samlp != nil {
		in, out := &in.Samlp, &out.Samlp
		*out = make([]SamlpInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SapAPI != nil {
		in, out := &in.SapAPI, &out.SapAPI
		*out = make([]SapAPIInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sentry != nil {
		in, out := &in.Sentry, &out.Sentry
		*out = make([]SentryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sharepoint != nil {
		in, out := &in.Sharepoint, &out.Sharepoint
		*out = make([]SharepointInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Springcm != nil {
		in, out := &in.Springcm, &out.Springcm
		*out = make([]SpringcmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SsoIntegration != nil {
		in, out := &in.SsoIntegration, &out.SsoIntegration
		*out = make([]SsoIntegrationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wams != nil {
		in, out := &in.Wams, &out.Wams
		*out = make([]WamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wsfed != nil {
		in, out := &in.Wsfed, &out.Wsfed
		*out = make([]WsfedInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Zendesk != nil {
		in, out := &in.Zendesk, &out.Zendesk
		*out = make([]ZendeskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zoom != nil {
		in, out := &in.Zoom, &out.Zoom
		*out = make([]ZoomInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsInitParameters.
func (in *AddonsInitParameters) DeepCopy() *AddonsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AddonsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsObservation) DeepCopyInto(out *AddonsObservation) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureSb != nil {
		in, out := &in.AzureSb, &out.AzureSb
		*out = make([]AzureSbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Box != nil {
		in, out := &in.Box, &out.Box
		*out = make([]BoxParameters, len(*in))
		copy(*out, *in)
	}
	if in.Cloudbees != nil {
		in, out := &in.Cloudbees, &out.Cloudbees
		*out = make([]CloudbeesParameters, len(*in))
		copy(*out, *in)
	}
	if in.Concur != nil {
		in, out := &in.Concur, &out.Concur
		*out = make([]ConcurParameters, len(*in))
		copy(*out, *in)
	}
	if in.Dropbox != nil {
		in, out := &in.Dropbox, &out.Dropbox
		*out = make([]DropboxParameters, len(*in))
		copy(*out, *in)
	}
	if in.Echosign != nil {
		in, out := &in.Echosign, &out.Echosign
		*out = make([]EchosignObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egnyte != nil {
		in, out := &in.Egnyte, &out.Egnyte
		*out = make([]EgnyteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firebase != nil {
		in, out := &in.Firebase, &out.Firebase
		*out = make([]FirebaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Layer != nil {
		in, out := &in.Layer, &out.Layer
		*out = make([]LayerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mscrm != nil {
		in, out := &in.Mscrm, &out.Mscrm
		*out = make([]MscrmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Newrelic != nil {
		in, out := &in.Newrelic, &out.Newrelic
		*out = make([]NewrelicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Office365 != nil {
		in, out := &in.Office365, &out.Office365
		*out = make([]Office365Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rms != nil {
		in, out := &in.Rms, &out.Rms
		*out = make([]RmsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Salesforce != nil {
		in, out := &in.Salesforce, &out.Salesforce
		*out = make([]SalesforceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceAPI != nil {
		in, out := &in.SalesforceAPI, &out.SalesforceAPI
		*out = make([]SalesforceAPIObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceSandboxAPI != nil {
		in, out := &in.SalesforceSandboxAPI, &out.SalesforceSandboxAPI
		*out = make([]SalesforceSandboxAPIObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Samlp != nil {
		in, out := &in.Samlp, &out.Samlp
		*out = make([]SamlpObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SapAPI != nil {
		in, out := &in.SapAPI, &out.SapAPI
		*out = make([]SapAPIObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sentry != nil {
		in, out := &in.Sentry, &out.Sentry
		*out = make([]SentryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sharepoint != nil {
		in, out := &in.Sharepoint, &out.Sharepoint
		*out = make([]SharepointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Springcm != nil {
		in, out := &in.Springcm, &out.Springcm
		*out = make([]SpringcmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SsoIntegration != nil {
		in, out := &in.SsoIntegration, &out.SsoIntegration
		*out = make([]SsoIntegrationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wams != nil {
		in, out := &in.Wams, &out.Wams
		*out = make([]WamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wsfed != nil {
		in, out := &in.Wsfed, &out.Wsfed
		*out = make([]WsfedParameters, len(*in))
		copy(*out, *in)
	}
	if in.Zendesk != nil {
		in, out := &in.Zendesk, &out.Zendesk
		*out = make([]ZendeskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zoom != nil {
		in, out := &in.Zoom, &out.Zoom
		*out = make([]ZoomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsObservation.
func (in *AddonsObservation) DeepCopy() *AddonsObservation {
	if in == nil {
		return nil
	}
	out := new(AddonsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsParameters) DeepCopyInto(out *AddonsParameters) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureSb != nil {
		in, out := &in.AzureSb, &out.AzureSb
		*out = make([]AzureSbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Box != nil {
		in, out := &in.Box, &out.Box
		*out = make([]BoxParameters, len(*in))
		copy(*out, *in)
	}
	if in.Cloudbees != nil {
		in, out := &in.Cloudbees, &out.Cloudbees
		*out = make([]CloudbeesParameters, len(*in))
		copy(*out, *in)
	}
	if in.Concur != nil {
		in, out := &in.Concur, &out.Concur
		*out = make([]ConcurParameters, len(*in))
		copy(*out, *in)
	}
	if in.Dropbox != nil {
		in, out := &in.Dropbox, &out.Dropbox
		*out = make([]DropboxParameters, len(*in))
		copy(*out, *in)
	}
	if in.Echosign != nil {
		in, out := &in.Echosign, &out.Echosign
		*out = make([]EchosignParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Egnyte != nil {
		in, out := &in.Egnyte, &out.Egnyte
		*out = make([]EgnyteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firebase != nil {
		in, out := &in.Firebase, &out.Firebase
		*out = make([]FirebaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Layer != nil {
		in, out := &in.Layer, &out.Layer
		*out = make([]LayerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mscrm != nil {
		in, out := &in.Mscrm, &out.Mscrm
		*out = make([]MscrmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Newrelic != nil {
		in, out := &in.Newrelic, &out.Newrelic
		*out = make([]NewrelicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Office365 != nil {
		in, out := &in.Office365, &out.Office365
		*out = make([]Office365Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rms != nil {
		in, out := &in.Rms, &out.Rms
		*out = make([]RmsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Salesforce != nil {
		in, out := &in.Salesforce, &out.Salesforce
		*out = make([]SalesforceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceAPI != nil {
		in, out := &in.SalesforceAPI, &out.SalesforceAPI
		*out = make([]SalesforceAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SalesforceSandboxAPI != nil {
		in, out := &in.SalesforceSandboxAPI, &out.SalesforceSandboxAPI
		*out = make([]SalesforceSandboxAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Samlp != nil {
		in, out := &in.Samlp, &out.Samlp
		*out = make([]SamlpParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SapAPI != nil {
		in, out := &in.SapAPI, &out.SapAPI
		*out = make([]SapAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sentry != nil {
		in, out := &in.Sentry, &out.Sentry
		*out = make([]SentryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sharepoint != nil {
		in, out := &in.Sharepoint, &out.Sharepoint
		*out = make([]SharepointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = make([]SlackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Springcm != nil {
		in, out := &in.Springcm, &out.Springcm
		*out = make([]SpringcmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SsoIntegration != nil {
		in, out := &in.SsoIntegration, &out.SsoIntegration
		*out = make([]SsoIntegrationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wams != nil {
		in, out := &in.Wams, &out.Wams
		*out = make([]WamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wsfed != nil {
		in, out := &in.Wsfed, &out.Wsfed
		*out = make([]WsfedParameters, len(*in))
		copy(*out, *in)
	}
	if in.Zendesk != nil {
		in, out := &in.Zendesk, &out.Zendesk
		*out = make([]ZendeskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zoom != nil {
		in, out := &in.Zoom, &out.Zoom
		*out = make([]ZoomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsParameters.
func (in *AddonsParameters) DeepCopy() *AddonsParameters {
	if in == nil {
		return nil
	}
	out := new(AddonsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AndroidInitParameters) DeepCopyInto(out *AndroidInitParameters) {
	*out = *in
	if in.AppPackageName != nil {
		in, out := &in.AppPackageName, &out.AppPackageName
		*out = new(string)
		**out = **in
	}
	if in.Sha256CertFingerprints != nil {
		in, out := &in.Sha256CertFingerprints, &out.Sha256CertFingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AndroidInitParameters.
func (in *AndroidInitParameters) DeepCopy() *AndroidInitParameters {
	if in == nil {
		return nil
	}
	out := new(AndroidInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AndroidObservation) DeepCopyInto(out *AndroidObservation) {
	*out = *in
	if in.AppPackageName != nil {
		in, out := &in.AppPackageName, &out.AppPackageName
		*out = new(string)
		**out = **in
	}
	if in.Sha256CertFingerprints != nil {
		in, out := &in.Sha256CertFingerprints, &out.Sha256CertFingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AndroidObservation.
func (in *AndroidObservation) DeepCopy() *AndroidObservation {
	if in == nil {
		return nil
	}
	out := new(AndroidObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AndroidParameters) DeepCopyInto(out *AndroidParameters) {
	*out = *in
	if in.AppPackageName != nil {
		in, out := &in.AppPackageName, &out.AppPackageName
		*out = new(string)
		**out = **in
	}
	if in.Sha256CertFingerprints != nil {
		in, out := &in.Sha256CertFingerprints, &out.Sha256CertFingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AndroidParameters.
func (in *AndroidParameters) DeepCopy() *AndroidParameters {
	if in == nil {
		return nil
	}
	out := new(AndroidParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleInitParameters) DeepCopyInto(out *AppleInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleInitParameters.
func (in *AppleInitParameters) DeepCopy() *AppleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleObservation) DeepCopyInto(out *AppleObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleObservation.
func (in *AppleObservation) DeepCopy() *AppleObservation {
	if in == nil {
		return nil
	}
	out := new(AppleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleParameters) DeepCopyInto(out *AppleParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleParameters.
func (in *AppleParameters) DeepCopy() *AppleParameters {
	if in == nil {
		return nil
	}
	out := new(AppleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsInitParameters) DeepCopyInto(out *AwsInitParameters) {
	*out = *in
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsInitParameters.
func (in *AwsInitParameters) DeepCopy() *AwsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsObservation) DeepCopyInto(out *AwsObservation) {
	*out = *in
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsObservation.
func (in *AwsObservation) DeepCopy() *AwsObservation {
	if in == nil {
		return nil
	}
	out := new(AwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsParameters) DeepCopyInto(out *AwsParameters) {
	*out = *in
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsParameters.
func (in *AwsParameters) DeepCopy() *AwsParameters {
	if in == nil {
		return nil
	}
	out := new(AwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobInitParameters) DeepCopyInto(out *AzureBlobInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BlobDelete != nil {
		in, out := &in.BlobDelete, &out.BlobDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlobName != nil {
		in, out := &in.BlobName, &out.BlobName
		*out = new(string)
		**out = **in
	}
	if in.BlobRead != nil {
		in, out := &in.BlobRead, &out.BlobRead
		*out = new(bool)
		**out = **in
	}
	if in.BlobWrite != nil {
		in, out := &in.BlobWrite, &out.BlobWrite
		*out = new(bool)
		**out = **in
	}
	if in.ContainerDelete != nil {
		in, out := &in.ContainerDelete, &out.ContainerDelete
		*out = new(bool)
		**out = **in
	}
	if in.ContainerList != nil {
		in, out := &in.ContainerList, &out.ContainerList
		*out = new(bool)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRead != nil {
		in, out := &in.ContainerRead, &out.ContainerRead
		*out = new(bool)
		**out = **in
	}
	if in.ContainerWrite != nil {
		in, out := &in.ContainerWrite, &out.ContainerWrite
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.SignedIdentifier != nil {
		in, out := &in.SignedIdentifier, &out.SignedIdentifier
		*out = new(string)
		**out = **in
	}
	if in.StorageAccessKeySecretRef != nil {
		in, out := &in.StorageAccessKeySecretRef, &out.StorageAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobInitParameters.
func (in *AzureBlobInitParameters) DeepCopy() *AzureBlobInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobObservation) DeepCopyInto(out *AzureBlobObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BlobDelete != nil {
		in, out := &in.BlobDelete, &out.BlobDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlobName != nil {
		in, out := &in.BlobName, &out.BlobName
		*out = new(string)
		**out = **in
	}
	if in.BlobRead != nil {
		in, out := &in.BlobRead, &out.BlobRead
		*out = new(bool)
		**out = **in
	}
	if in.BlobWrite != nil {
		in, out := &in.BlobWrite, &out.BlobWrite
		*out = new(bool)
		**out = **in
	}
	if in.ContainerDelete != nil {
		in, out := &in.ContainerDelete, &out.ContainerDelete
		*out = new(bool)
		**out = **in
	}
	if in.ContainerList != nil {
		in, out := &in.ContainerList, &out.ContainerList
		*out = new(bool)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRead != nil {
		in, out := &in.ContainerRead, &out.ContainerRead
		*out = new(bool)
		**out = **in
	}
	if in.ContainerWrite != nil {
		in, out := &in.ContainerWrite, &out.ContainerWrite
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.SignedIdentifier != nil {
		in, out := &in.SignedIdentifier, &out.SignedIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobObservation.
func (in *AzureBlobObservation) DeepCopy() *AzureBlobObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobParameters) DeepCopyInto(out *AzureBlobParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BlobDelete != nil {
		in, out := &in.BlobDelete, &out.BlobDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlobName != nil {
		in, out := &in.BlobName, &out.BlobName
		*out = new(string)
		**out = **in
	}
	if in.BlobRead != nil {
		in, out := &in.BlobRead, &out.BlobRead
		*out = new(bool)
		**out = **in
	}
	if in.BlobWrite != nil {
		in, out := &in.BlobWrite, &out.BlobWrite
		*out = new(bool)
		**out = **in
	}
	if in.ContainerDelete != nil {
		in, out := &in.ContainerDelete, &out.ContainerDelete
		*out = new(bool)
		**out = **in
	}
	if in.ContainerList != nil {
		in, out := &in.ContainerList, &out.ContainerList
		*out = new(bool)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRead != nil {
		in, out := &in.ContainerRead, &out.ContainerRead
		*out = new(bool)
		**out = **in
	}
	if in.ContainerWrite != nil {
		in, out := &in.ContainerWrite, &out.ContainerWrite
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.SignedIdentifier != nil {
		in, out := &in.SignedIdentifier, &out.SignedIdentifier
		*out = new(string)
		**out = **in
	}
	if in.StorageAccessKeySecretRef != nil {
		in, out := &in.StorageAccessKeySecretRef, &out.StorageAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobParameters.
func (in *AzureBlobParameters) DeepCopy() *AzureBlobParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSbInitParameters) DeepCopyInto(out *AzureSbInitParameters) {
	*out = *in
	if in.EntityPath != nil {
		in, out := &in.EntityPath, &out.EntityPath
		*out = new(string)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.SasKeyName != nil {
		in, out := &in.SasKeyName, &out.SasKeyName
		*out = new(string)
		**out = **in
	}
	if in.SasKeySecretRef != nil {
		in, out := &in.SasKeySecretRef, &out.SasKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSbInitParameters.
func (in *AzureSbInitParameters) DeepCopy() *AzureSbInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureSbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSbObservation) DeepCopyInto(out *AzureSbObservation) {
	*out = *in
	if in.EntityPath != nil {
		in, out := &in.EntityPath, &out.EntityPath
		*out = new(string)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.SasKeyName != nil {
		in, out := &in.SasKeyName, &out.SasKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSbObservation.
func (in *AzureSbObservation) DeepCopy() *AzureSbObservation {
	if in == nil {
		return nil
	}
	out := new(AzureSbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSbParameters) DeepCopyInto(out *AzureSbParameters) {
	*out = *in
	if in.EntityPath != nil {
		in, out := &in.EntityPath, &out.EntityPath
		*out = new(string)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.SasKeyName != nil {
		in, out := &in.SasKeyName, &out.SasKeyName
		*out = new(string)
		**out = **in
	}
	if in.SasKeySecretRef != nil {
		in, out := &in.SasKeySecretRef, &out.SasKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSbParameters.
func (in *AzureSbParameters) DeepCopy() *AzureSbParameters {
	if in == nil {
		return nil
	}
	out := new(AzureSbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackchannelLogoutInitiatorsInitParameters) DeepCopyInto(out *BackchannelLogoutInitiatorsInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.SelectedInitiators != nil {
		in, out := &in.SelectedInitiators, &out.SelectedInitiators
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackchannelLogoutInitiatorsInitParameters.
func (in *BackchannelLogoutInitiatorsInitParameters) DeepCopy() *BackchannelLogoutInitiatorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackchannelLogoutInitiatorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackchannelLogoutInitiatorsObservation) DeepCopyInto(out *BackchannelLogoutInitiatorsObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.SelectedInitiators != nil {
		in, out := &in.SelectedInitiators, &out.SelectedInitiators
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackchannelLogoutInitiatorsObservation.
func (in *BackchannelLogoutInitiatorsObservation) DeepCopy() *BackchannelLogoutInitiatorsObservation {
	if in == nil {
		return nil
	}
	out := new(BackchannelLogoutInitiatorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackchannelLogoutInitiatorsParameters) DeepCopyInto(out *BackchannelLogoutInitiatorsParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.SelectedInitiators != nil {
		in, out := &in.SelectedInitiators, &out.SelectedInitiators
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackchannelLogoutInitiatorsParameters.
func (in *BackchannelLogoutInitiatorsParameters) DeepCopy() *BackchannelLogoutInitiatorsParameters {
	if in == nil {
		return nil
	}
	out := new(BackchannelLogoutInitiatorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BoxInitParameters) DeepCopyInto(out *BoxInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BoxInitParameters.
func (in *BoxInitParameters) DeepCopy() *BoxInitParameters {
	if in == nil {
		return nil
	}
	out := new(BoxInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BoxObservation) DeepCopyInto(out *BoxObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BoxObservation.
func (in *BoxObservation) DeepCopy() *BoxObservation {
	if in == nil {
		return nil
	}
	out := new(BoxObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BoxParameters) DeepCopyInto(out *BoxParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BoxParameters.
func (in *BoxParameters) DeepCopy() *BoxParameters {
	if in == nil {
		return nil
	}
	out := new(BoxParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Client) DeepCopyInto(out *Client) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Client.
func (in *Client) DeepCopy() *Client {
	if in == nil {
		return nil
	}
	out := new(Client)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Client) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCredentialsInitParameters) DeepCopyInto(out *ClientCredentialsInitParameters) {
	*out = *in
	if in.Enforce != nil {
		in, out := &in.Enforce, &out.Enforce
		*out = new(bool)
		**out = **in
	}
	if in.PerDay != nil {
		in, out := &in.PerDay, &out.PerDay
		*out = new(float64)
		**out = **in
	}
	if in.PerHour != nil {
		in, out := &in.PerHour, &out.PerHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCredentialsInitParameters.
func (in *ClientCredentialsInitParameters) DeepCopy() *ClientCredentialsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCredentialsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCredentialsObservation) DeepCopyInto(out *ClientCredentialsObservation) {
	*out = *in
	if in.Enforce != nil {
		in, out := &in.Enforce, &out.Enforce
		*out = new(bool)
		**out = **in
	}
	if in.PerDay != nil {
		in, out := &in.PerDay, &out.PerDay
		*out = new(float64)
		**out = **in
	}
	if in.PerHour != nil {
		in, out := &in.PerHour, &out.PerHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCredentialsObservation.
func (in *ClientCredentialsObservation) DeepCopy() *ClientCredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCredentialsParameters) DeepCopyInto(out *ClientCredentialsParameters) {
	*out = *in
	if in.Enforce != nil {
		in, out := &in.Enforce, &out.Enforce
		*out = new(bool)
		**out = **in
	}
	if in.PerDay != nil {
		in, out := &in.PerDay, &out.PerDay
		*out = new(float64)
		**out = **in
	}
	if in.PerHour != nil {
		in, out := &in.PerHour, &out.PerHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCredentialsParameters.
func (in *ClientCredentialsParameters) DeepCopy() *ClientCredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInitParameters) DeepCopyInto(out *ClientInitParameters) {
	*out = *in
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]AddonsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedClients != nil {
		in, out := &in.AllowedClients, &out.AllowedClients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedLogoutUrls != nil {
		in, out := &in.AllowedLogoutUrls, &out.AllowedLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.Callbacks != nil {
		in, out := &in.Callbacks, &out.Callbacks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientAliases != nil {
		in, out := &in.ClientAliases, &out.ClientAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientMetadata != nil {
		in, out := &in.ClientMetadata, &out.ClientMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.CrossOriginAuth != nil {
		in, out := &in.CrossOriginAuth, &out.CrossOriginAuth
		*out = new(bool)
		**out = **in
	}
	if in.CrossOriginLoc != nil {
		in, out := &in.CrossOriginLoc, &out.CrossOriginLoc
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPage != nil {
		in, out := &in.CustomLoginPage, &out.CustomLoginPage
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPageOn != nil {
		in, out := &in.CustomLoginPageOn, &out.CustomLoginPageOn
		*out = new(bool)
		**out = **in
	}
	if in.DefaultOrganization != nil {
		in, out := &in.DefaultOrganization, &out.DefaultOrganization
		*out = make([]DefaultOrganizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FormTemplate != nil {
		in, out := &in.FormTemplate, &out.FormTemplate
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InitiateLoginURI != nil {
		in, out := &in.InitiateLoginURI, &out.InitiateLoginURI
		*out = new(string)
		**out = **in
	}
	if in.IsFirstParty != nil {
		in, out := &in.IsFirstParty, &out.IsFirstParty
		*out = new(bool)
		**out = **in
	}
	if in.IsTokenEndpointIPHeaderTrusted != nil {
		in, out := &in.IsTokenEndpointIPHeaderTrusted, &out.IsTokenEndpointIPHeaderTrusted
		*out = new(bool)
		**out = **in
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.Mobile != nil {
		in, out := &in.Mobile, &out.Mobile
		*out = make([]MobileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NativeSocialLogin != nil {
		in, out := &in.NativeSocialLogin, &out.NativeSocialLogin
		*out = make([]NativeSocialLoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OidcBackchannelLogoutUrls != nil {
		in, out := &in.OidcBackchannelLogoutUrls, &out.OidcBackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcConformant != nil {
		in, out := &in.OidcConformant, &out.OidcConformant
		*out = new(bool)
		**out = **in
	}
	if in.OidcLogout != nil {
		in, out := &in.OidcLogout, &out.OidcLogout
		*out = make([]OidcLogoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrganizationRequireBehavior != nil {
		in, out := &in.OrganizationRequireBehavior, &out.OrganizationRequireBehavior
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = make([]RefreshTokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireProofOfPossession != nil {
		in, out := &in.RequireProofOfPossession, &out.RequireProofOfPossession
		*out = new(bool)
		**out = **in
	}
	if in.RequirePushedAuthorizationRequests != nil {
		in, out := &in.RequirePushedAuthorizationRequests, &out.RequirePushedAuthorizationRequests
		*out = new(bool)
		**out = **in
	}
	if in.SessionTransfer != nil {
		in, out := &in.SessionTransfer, &out.SessionTransfer
		*out = make([]SessionTransferInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = new(bool)
		**out = **in
	}
	if in.SsoDisabled != nil {
		in, out := &in.SsoDisabled, &out.SsoDisabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenExchange != nil {
		in, out := &in.TokenExchange, &out.TokenExchange
		*out = make([]TokenExchangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenQuota != nil {
		in, out := &in.TokenQuota, &out.TokenQuota
		*out = make([]TokenQuotaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInitParameters.
func (in *ClientInitParameters) DeepCopy() *ClientInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientList) DeepCopyInto(out *ClientList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Client, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientList.
func (in *ClientList) DeepCopy() *ClientList {
	if in == nil {
		return nil
	}
	out := new(ClientList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientObservation) DeepCopyInto(out *ClientObservation) {
	*out = *in
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]AddonsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedClients != nil {
		in, out := &in.AllowedClients, &out.AllowedClients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedLogoutUrls != nil {
		in, out := &in.AllowedLogoutUrls, &out.AllowedLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.Callbacks != nil {
		in, out := &in.Callbacks, &out.Callbacks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientAliases != nil {
		in, out := &in.ClientAliases, &out.ClientAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientMetadata != nil {
		in, out := &in.ClientMetadata, &out.ClientMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.CrossOriginAuth != nil {
		in, out := &in.CrossOriginAuth, &out.CrossOriginAuth
		*out = new(bool)
		**out = **in
	}
	if in.CrossOriginLoc != nil {
		in, out := &in.CrossOriginLoc, &out.CrossOriginLoc
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPage != nil {
		in, out := &in.CustomLoginPage, &out.CustomLoginPage
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPageOn != nil {
		in, out := &in.CustomLoginPageOn, &out.CustomLoginPageOn
		*out = new(bool)
		**out = **in
	}
	if in.DefaultOrganization != nil {
		in, out := &in.DefaultOrganization, &out.DefaultOrganization
		*out = make([]DefaultOrganizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FormTemplate != nil {
		in, out := &in.FormTemplate, &out.FormTemplate
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitiateLoginURI != nil {
		in, out := &in.InitiateLoginURI, &out.InitiateLoginURI
		*out = new(string)
		**out = **in
	}
	if in.IsFirstParty != nil {
		in, out := &in.IsFirstParty, &out.IsFirstParty
		*out = new(bool)
		**out = **in
	}
	if in.IsTokenEndpointIPHeaderTrusted != nil {
		in, out := &in.IsTokenEndpointIPHeaderTrusted, &out.IsTokenEndpointIPHeaderTrusted
		*out = new(bool)
		**out = **in
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.Mobile != nil {
		in, out := &in.Mobile, &out.Mobile
		*out = make([]MobileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NativeSocialLogin != nil {
		in, out := &in.NativeSocialLogin, &out.NativeSocialLogin
		*out = make([]NativeSocialLoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OidcBackchannelLogoutUrls != nil {
		in, out := &in.OidcBackchannelLogoutUrls, &out.OidcBackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcConformant != nil {
		in, out := &in.OidcConformant, &out.OidcConformant
		*out = new(bool)
		**out = **in
	}
	if in.OidcLogout != nil {
		in, out := &in.OidcLogout, &out.OidcLogout
		*out = make([]OidcLogoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrganizationRequireBehavior != nil {
		in, out := &in.OrganizationRequireBehavior, &out.OrganizationRequireBehavior
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = make([]RefreshTokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireProofOfPossession != nil {
		in, out := &in.RequireProofOfPossession, &out.RequireProofOfPossession
		*out = new(bool)
		**out = **in
	}
	if in.RequirePushedAuthorizationRequests != nil {
		in, out := &in.RequirePushedAuthorizationRequests, &out.RequirePushedAuthorizationRequests
		*out = new(bool)
		**out = **in
	}
	if in.SessionTransfer != nil {
		in, out := &in.SessionTransfer, &out.SessionTransfer
		*out = make([]SessionTransferObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = new(bool)
		**out = **in
	}
	if in.SsoDisabled != nil {
		in, out := &in.SsoDisabled, &out.SsoDisabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenExchange != nil {
		in, out := &in.TokenExchange, &out.TokenExchange
		*out = make([]TokenExchangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenQuota != nil {
		in, out := &in.TokenQuota, &out.TokenQuota
		*out = make([]TokenQuotaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientObservation.
func (in *ClientObservation) DeepCopy() *ClientObservation {
	if in == nil {
		return nil
	}
	out := new(ClientObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientParameters) DeepCopyInto(out *ClientParameters) {
	*out = *in
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]AddonsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedClients != nil {
		in, out := &in.AllowedClients, &out.AllowedClients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedLogoutUrls != nil {
		in, out := &in.AllowedLogoutUrls, &out.AllowedLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.Callbacks != nil {
		in, out := &in.Callbacks, &out.Callbacks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientAliases != nil {
		in, out := &in.ClientAliases, &out.ClientAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientMetadata != nil {
		in, out := &in.ClientMetadata, &out.ClientMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.CrossOriginAuth != nil {
		in, out := &in.CrossOriginAuth, &out.CrossOriginAuth
		*out = new(bool)
		**out = **in
	}
	if in.CrossOriginLoc != nil {
		in, out := &in.CrossOriginLoc, &out.CrossOriginLoc
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPage != nil {
		in, out := &in.CustomLoginPage, &out.CustomLoginPage
		*out = new(string)
		**out = **in
	}
	if in.CustomLoginPageOn != nil {
		in, out := &in.CustomLoginPageOn, &out.CustomLoginPageOn
		*out = new(bool)
		**out = **in
	}
	if in.DefaultOrganization != nil {
		in, out := &in.DefaultOrganization, &out.DefaultOrganization
		*out = make([]DefaultOrganizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FormTemplate != nil {
		in, out := &in.FormTemplate, &out.FormTemplate
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InitiateLoginURI != nil {
		in, out := &in.InitiateLoginURI, &out.InitiateLoginURI
		*out = new(string)
		**out = **in
	}
	if in.IsFirstParty != nil {
		in, out := &in.IsFirstParty, &out.IsFirstParty
		*out = new(bool)
		**out = **in
	}
	if in.IsTokenEndpointIPHeaderTrusted != nil {
		in, out := &in.IsTokenEndpointIPHeaderTrusted, &out.IsTokenEndpointIPHeaderTrusted
		*out = new(bool)
		**out = **in
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.Mobile != nil {
		in, out := &in.Mobile, &out.Mobile
		*out = make([]MobileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NativeSocialLogin != nil {
		in, out := &in.NativeSocialLogin, &out.NativeSocialLogin
		*out = make([]NativeSocialLoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OidcBackchannelLogoutUrls != nil {
		in, out := &in.OidcBackchannelLogoutUrls, &out.OidcBackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OidcConformant != nil {
		in, out := &in.OidcConformant, &out.OidcConformant
		*out = new(bool)
		**out = **in
	}
	if in.OidcLogout != nil {
		in, out := &in.OidcLogout, &out.OidcLogout
		*out = make([]OidcLogoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrganizationRequireBehavior != nil {
		in, out := &in.OrganizationRequireBehavior, &out.OrganizationRequireBehavior
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = make([]RefreshTokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireProofOfPossession != nil {
		in, out := &in.RequireProofOfPossession, &out.RequireProofOfPossession
		*out = new(bool)
		**out = **in
	}
	if in.RequirePushedAuthorizationRequests != nil {
		in, out := &in.RequirePushedAuthorizationRequests, &out.RequirePushedAuthorizationRequests
		*out = new(bool)
		**out = **in
	}
	if in.SessionTransfer != nil {
		in, out := &in.SessionTransfer, &out.SessionTransfer
		*out = make([]SessionTransferParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = new(bool)
		**out = **in
	}
	if in.SsoDisabled != nil {
		in, out := &in.SsoDisabled, &out.SsoDisabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenExchange != nil {
		in, out := &in.TokenExchange, &out.TokenExchange
		*out = make([]TokenExchangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenQuota != nil {
		in, out := &in.TokenQuota, &out.TokenQuota
		*out = make([]TokenQuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientParameters.
func (in *ClientParameters) DeepCopy() *ClientParameters {
	if in == nil {
		return nil
	}
	out := new(ClientParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientSpec) DeepCopyInto(out *ClientSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientSpec.
func (in *ClientSpec) DeepCopy() *ClientSpec {
	if in == nil {
		return nil
	}
	out := new(ClientSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientStatus) DeepCopyInto(out *ClientStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientStatus.
func (in *ClientStatus) DeepCopy() *ClientStatus {
	if in == nil {
		return nil
	}
	out := new(ClientStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudbeesInitParameters) DeepCopyInto(out *CloudbeesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudbeesInitParameters.
func (in *CloudbeesInitParameters) DeepCopy() *CloudbeesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudbeesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudbeesObservation) DeepCopyInto(out *CloudbeesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudbeesObservation.
func (in *CloudbeesObservation) DeepCopy() *CloudbeesObservation {
	if in == nil {
		return nil
	}
	out := new(CloudbeesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudbeesParameters) DeepCopyInto(out *CloudbeesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudbeesParameters.
func (in *CloudbeesParameters) DeepCopy() *CloudbeesParameters {
	if in == nil {
		return nil
	}
	out := new(CloudbeesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurInitParameters) DeepCopyInto(out *ConcurInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurInitParameters.
func (in *ConcurInitParameters) DeepCopy() *ConcurInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConcurInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurObservation) DeepCopyInto(out *ConcurObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurObservation.
func (in *ConcurObservation) DeepCopy() *ConcurObservation {
	if in == nil {
		return nil
	}
	out := new(ConcurObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurParameters) DeepCopyInto(out *ConcurParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurParameters.
func (in *ConcurParameters) DeepCopy() *ConcurParameters {
	if in == nil {
		return nil
	}
	out := new(ConcurParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultOrganizationInitParameters) DeepCopyInto(out *DefaultOrganizationInitParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Flows != nil {
		in, out := &in.Flows, &out.Flows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultOrganizationInitParameters.
func (in *DefaultOrganizationInitParameters) DeepCopy() *DefaultOrganizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultOrganizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultOrganizationObservation) DeepCopyInto(out *DefaultOrganizationObservation) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Flows != nil {
		in, out := &in.Flows, &out.Flows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultOrganizationObservation.
func (in *DefaultOrganizationObservation) DeepCopy() *DefaultOrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultOrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultOrganizationParameters) DeepCopyInto(out *DefaultOrganizationParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Flows != nil {
		in, out := &in.Flows, &out.Flows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultOrganizationParameters.
func (in *DefaultOrganizationParameters) DeepCopy() *DefaultOrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultOrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropboxInitParameters) DeepCopyInto(out *DropboxInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropboxInitParameters.
func (in *DropboxInitParameters) DeepCopy() *DropboxInitParameters {
	if in == nil {
		return nil
	}
	out := new(DropboxInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropboxObservation) DeepCopyInto(out *DropboxObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropboxObservation.
func (in *DropboxObservation) DeepCopy() *DropboxObservation {
	if in == nil {
		return nil
	}
	out := new(DropboxObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropboxParameters) DeepCopyInto(out *DropboxParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropboxParameters.
func (in *DropboxParameters) DeepCopy() *DropboxParameters {
	if in == nil {
		return nil
	}
	out := new(DropboxParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EchosignInitParameters) DeepCopyInto(out *EchosignInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EchosignInitParameters.
func (in *EchosignInitParameters) DeepCopy() *EchosignInitParameters {
	if in == nil {
		return nil
	}
	out := new(EchosignInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EchosignObservation) DeepCopyInto(out *EchosignObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EchosignObservation.
func (in *EchosignObservation) DeepCopy() *EchosignObservation {
	if in == nil {
		return nil
	}
	out := new(EchosignObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EchosignParameters) DeepCopyInto(out *EchosignParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EchosignParameters.
func (in *EchosignParameters) DeepCopy() *EchosignParameters {
	if in == nil {
		return nil
	}
	out := new(EchosignParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgnyteInitParameters) DeepCopyInto(out *EgnyteInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgnyteInitParameters.
func (in *EgnyteInitParameters) DeepCopy() *EgnyteInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgnyteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgnyteObservation) DeepCopyInto(out *EgnyteObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgnyteObservation.
func (in *EgnyteObservation) DeepCopy() *EgnyteObservation {
	if in == nil {
		return nil
	}
	out := new(EgnyteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgnyteParameters) DeepCopyInto(out *EgnyteParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgnyteParameters.
func (in *EgnyteParameters) DeepCopy() *EgnyteParameters {
	if in == nil {
		return nil
	}
	out := new(EgnyteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookInitParameters) DeepCopyInto(out *FacebookInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookInitParameters.
func (in *FacebookInitParameters) DeepCopy() *FacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookObservation) DeepCopyInto(out *FacebookObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookObservation.
func (in *FacebookObservation) DeepCopy() *FacebookObservation {
	if in == nil {
		return nil
	}
	out := new(FacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookParameters) DeepCopyInto(out *FacebookParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookParameters.
func (in *FacebookParameters) DeepCopy() *FacebookParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirebaseInitParameters) DeepCopyInto(out *FirebaseInitParameters) {
	*out = *in
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.PrivateKeyIDSecretRef != nil {
		in, out := &in.PrivateKeyIDSecretRef, &out.PrivateKeyIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirebaseInitParameters.
func (in *FirebaseInitParameters) DeepCopy() *FirebaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirebaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirebaseObservation) DeepCopyInto(out *FirebaseObservation) {
	*out = *in
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirebaseObservation.
func (in *FirebaseObservation) DeepCopy() *FirebaseObservation {
	if in == nil {
		return nil
	}
	out := new(FirebaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirebaseParameters) DeepCopyInto(out *FirebaseParameters) {
	*out = *in
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.PrivateKeyIDSecretRef != nil {
		in, out := &in.PrivateKeyIDSecretRef, &out.PrivateKeyIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirebaseParameters.
func (in *FirebaseParameters) DeepCopy() *FirebaseParameters {
	if in == nil {
		return nil
	}
	out := new(FirebaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleInitParameters) DeepCopyInto(out *GoogleInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleInitParameters.
func (in *GoogleInitParameters) DeepCopy() *GoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleObservation) DeepCopyInto(out *GoogleObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleObservation.
func (in *GoogleObservation) DeepCopy() *GoogleObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleParameters) DeepCopyInto(out *GoogleParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleParameters.
func (in *GoogleParameters) DeepCopy() *GoogleParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Grant) DeepCopyInto(out *Grant) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Grant.
func (in *Grant) DeepCopy() *Grant {
	if in == nil {
		return nil
	}
	out := new(Grant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Grant) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantInitParameters) DeepCopyInto(out *GrantInitParameters) {
	*out = *in
	if in.AllowAnyOrganization != nil {
		in, out := &in.AllowAnyOrganization, &out.AllowAnyOrganization
		*out = new(bool)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantInitParameters.
func (in *GrantInitParameters) DeepCopy() *GrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantList) DeepCopyInto(out *GrantList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Grant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantList.
func (in *GrantList) DeepCopy() *GrantList {
	if in == nil {
		return nil
	}
	out := new(GrantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GrantList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantObservation) DeepCopyInto(out *GrantObservation) {
	*out = *in
	if in.AllowAnyOrganization != nil {
		in, out := &in.AllowAnyOrganization, &out.AllowAnyOrganization
		*out = new(bool)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantObservation.
func (in *GrantObservation) DeepCopy() *GrantObservation {
	if in == nil {
		return nil
	}
	out := new(GrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantParameters) DeepCopyInto(out *GrantParameters) {
	*out = *in
	if in.AllowAnyOrganization != nil {
		in, out := &in.AllowAnyOrganization, &out.AllowAnyOrganization
		*out = new(bool)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationUsage != nil {
		in, out := &in.OrganizationUsage, &out.OrganizationUsage
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantParameters.
func (in *GrantParameters) DeepCopy() *GrantParameters {
	if in == nil {
		return nil
	}
	out := new(GrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantSpec) DeepCopyInto(out *GrantSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantSpec.
func (in *GrantSpec) DeepCopy() *GrantSpec {
	if in == nil {
		return nil
	}
	out := new(GrantSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrantStatus) DeepCopyInto(out *GrantStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrantStatus.
func (in *GrantStatus) DeepCopy() *GrantStatus {
	if in == nil {
		return nil
	}
	out := new(GrantStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IosInitParameters) DeepCopyInto(out *IosInitParameters) {
	*out = *in
	if in.AppBundleIdentifier != nil {
		in, out := &in.AppBundleIdentifier, &out.AppBundleIdentifier
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IosInitParameters.
func (in *IosInitParameters) DeepCopy() *IosInitParameters {
	if in == nil {
		return nil
	}
	out := new(IosInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IosObservation) DeepCopyInto(out *IosObservation) {
	*out = *in
	if in.AppBundleIdentifier != nil {
		in, out := &in.AppBundleIdentifier, &out.AppBundleIdentifier
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IosObservation.
func (in *IosObservation) DeepCopy() *IosObservation {
	if in == nil {
		return nil
	}
	out := new(IosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IosParameters) DeepCopyInto(out *IosParameters) {
	*out = *in
	if in.AppBundleIdentifier != nil {
		in, out := &in.AppBundleIdentifier, &out.AppBundleIdentifier
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IosParameters.
func (in *IosParameters) DeepCopy() *IosParameters {
	if in == nil {
		return nil
	}
	out := new(IosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationInitParameters) DeepCopyInto(out *JwtConfigurationInitParameters) {
	*out = *in
	if in.Alg != nil {
		in, out := &in.Alg, &out.Alg
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretEncoded != nil {
		in, out := &in.SecretEncoded, &out.SecretEncoded
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationInitParameters.
func (in *JwtConfigurationInitParameters) DeepCopy() *JwtConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationObservation) DeepCopyInto(out *JwtConfigurationObservation) {
	*out = *in
	if in.Alg != nil {
		in, out := &in.Alg, &out.Alg
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretEncoded != nil {
		in, out := &in.SecretEncoded, &out.SecretEncoded
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationObservation.
func (in *JwtConfigurationObservation) DeepCopy() *JwtConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationParameters) DeepCopyInto(out *JwtConfigurationParameters) {
	*out = *in
	if in.Alg != nil {
		in, out := &in.Alg, &out.Alg
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretEncoded != nil {
		in, out := &in.SecretEncoded, &out.SecretEncoded
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationParameters.
func (in *JwtConfigurationParameters) DeepCopy() *JwtConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerInitParameters) DeepCopyInto(out *LayerInitParameters) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	in.KeyIDSecretRef.DeepCopyInto(&out.KeyIDSecretRef)
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerInitParameters.
func (in *LayerInitParameters) DeepCopy() *LayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(LayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerObservation) DeepCopyInto(out *LayerObservation) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerObservation.
func (in *LayerObservation) DeepCopy() *LayerObservation {
	if in == nil {
		return nil
	}
	out := new(LayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerParameters) DeepCopyInto(out *LayerParameters) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(float64)
		**out = **in
	}
	in.KeyIDSecretRef.DeepCopyInto(&out.KeyIDSecretRef)
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerParameters.
func (in *LayerParameters) DeepCopy() *LayerParameters {
	if in == nil {
		return nil
	}
	out := new(LayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogoutInitParameters) DeepCopyInto(out *LogoutInitParameters) {
	*out = *in
	if in.Callback != nil {
		in, out := &in.Callback, &out.Callback
		*out = new(string)
		**out = **in
	}
	if in.SLOEnabled != nil {
		in, out := &in.SLOEnabled, &out.SLOEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogoutInitParameters.
func (in *LogoutInitParameters) DeepCopy() *LogoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogoutObservation) DeepCopyInto(out *LogoutObservation) {
	*out = *in
	if in.Callback != nil {
		in, out := &in.Callback, &out.Callback
		*out = new(string)
		**out = **in
	}
	if in.SLOEnabled != nil {
		in, out := &in.SLOEnabled, &out.SLOEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogoutObservation.
func (in *LogoutObservation) DeepCopy() *LogoutObservation {
	if in == nil {
		return nil
	}
	out := new(LogoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogoutParameters) DeepCopyInto(out *LogoutParameters) {
	*out = *in
	if in.Callback != nil {
		in, out := &in.Callback, &out.Callback
		*out = new(string)
		**out = **in
	}
	if in.SLOEnabled != nil {
		in, out := &in.SLOEnabled, &out.SLOEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogoutParameters.
func (in *LogoutParameters) DeepCopy() *LogoutParameters {
	if in == nil {
		return nil
	}
	out := new(LogoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileInitParameters) DeepCopyInto(out *MobileInitParameters) {
	*out = *in
	if in.Android != nil {
		in, out := &in.Android, &out.Android
		*out = make([]AndroidInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ios != nil {
		in, out := &in.Ios, &out.Ios
		*out = make([]IosInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileInitParameters.
func (in *MobileInitParameters) DeepCopy() *MobileInitParameters {
	if in == nil {
		return nil
	}
	out := new(MobileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileObservation) DeepCopyInto(out *MobileObservation) {
	*out = *in
	if in.Android != nil {
		in, out := &in.Android, &out.Android
		*out = make([]AndroidObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ios != nil {
		in, out := &in.Ios, &out.Ios
		*out = make([]IosObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileObservation.
func (in *MobileObservation) DeepCopy() *MobileObservation {
	if in == nil {
		return nil
	}
	out := new(MobileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileParameters) DeepCopyInto(out *MobileParameters) {
	*out = *in
	if in.Android != nil {
		in, out := &in.Android, &out.Android
		*out = make([]AndroidParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ios != nil {
		in, out := &in.Ios, &out.Ios
		*out = make([]IosParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileParameters.
func (in *MobileParameters) DeepCopy() *MobileParameters {
	if in == nil {
		return nil
	}
	out := new(MobileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MscrmInitParameters) DeepCopyInto(out *MscrmInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MscrmInitParameters.
func (in *MscrmInitParameters) DeepCopy() *MscrmInitParameters {
	if in == nil {
		return nil
	}
	out := new(MscrmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MscrmObservation) DeepCopyInto(out *MscrmObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MscrmObservation.
func (in *MscrmObservation) DeepCopy() *MscrmObservation {
	if in == nil {
		return nil
	}
	out := new(MscrmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MscrmParameters) DeepCopyInto(out *MscrmParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MscrmParameters.
func (in *MscrmParameters) DeepCopy() *MscrmParameters {
	if in == nil {
		return nil
	}
	out := new(MscrmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NativeSocialLoginInitParameters) DeepCopyInto(out *NativeSocialLoginInitParameters) {
	*out = *in
	if in.Apple != nil {
		in, out := &in.Apple, &out.Apple
		*out = make([]AppleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NativeSocialLoginInitParameters.
func (in *NativeSocialLoginInitParameters) DeepCopy() *NativeSocialLoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(NativeSocialLoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NativeSocialLoginObservation) DeepCopyInto(out *NativeSocialLoginObservation) {
	*out = *in
	if in.Apple != nil {
		in, out := &in.Apple, &out.Apple
		*out = make([]AppleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NativeSocialLoginObservation.
func (in *NativeSocialLoginObservation) DeepCopy() *NativeSocialLoginObservation {
	if in == nil {
		return nil
	}
	out := new(NativeSocialLoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NativeSocialLoginParameters) DeepCopyInto(out *NativeSocialLoginParameters) {
	*out = *in
	if in.Apple != nil {
		in, out := &in.Apple, &out.Apple
		*out = make([]AppleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NativeSocialLoginParameters.
func (in *NativeSocialLoginParameters) DeepCopy() *NativeSocialLoginParameters {
	if in == nil {
		return nil
	}
	out := new(NativeSocialLoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewrelicInitParameters) DeepCopyInto(out *NewrelicInitParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewrelicInitParameters.
func (in *NewrelicInitParameters) DeepCopy() *NewrelicInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewrelicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewrelicObservation) DeepCopyInto(out *NewrelicObservation) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewrelicObservation.
func (in *NewrelicObservation) DeepCopy() *NewrelicObservation {
	if in == nil {
		return nil
	}
	out := new(NewrelicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewrelicParameters) DeepCopyInto(out *NewrelicParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewrelicParameters.
func (in *NewrelicParameters) DeepCopy() *NewrelicParameters {
	if in == nil {
		return nil
	}
	out := new(NewrelicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Office365InitParameters) DeepCopyInto(out *Office365InitParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Office365InitParameters.
func (in *Office365InitParameters) DeepCopy() *Office365InitParameters {
	if in == nil {
		return nil
	}
	out := new(Office365InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Office365Observation) DeepCopyInto(out *Office365Observation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Office365Observation.
func (in *Office365Observation) DeepCopy() *Office365Observation {
	if in == nil {
		return nil
	}
	out := new(Office365Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Office365Parameters) DeepCopyInto(out *Office365Parameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Office365Parameters.
func (in *Office365Parameters) DeepCopy() *Office365Parameters {
	if in == nil {
		return nil
	}
	out := new(Office365Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcLogoutInitParameters) DeepCopyInto(out *OidcLogoutInitParameters) {
	*out = *in
	if in.BackchannelLogoutInitiators != nil {
		in, out := &in.BackchannelLogoutInitiators, &out.BackchannelLogoutInitiators
		*out = make([]BackchannelLogoutInitiatorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutUrls != nil {
		in, out := &in.BackchannelLogoutUrls, &out.BackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcLogoutInitParameters.
func (in *OidcLogoutInitParameters) DeepCopy() *OidcLogoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(OidcLogoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcLogoutObservation) DeepCopyInto(out *OidcLogoutObservation) {
	*out = *in
	if in.BackchannelLogoutInitiators != nil {
		in, out := &in.BackchannelLogoutInitiators, &out.BackchannelLogoutInitiators
		*out = make([]BackchannelLogoutInitiatorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutUrls != nil {
		in, out := &in.BackchannelLogoutUrls, &out.BackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcLogoutObservation.
func (in *OidcLogoutObservation) DeepCopy() *OidcLogoutObservation {
	if in == nil {
		return nil
	}
	out := new(OidcLogoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcLogoutParameters) DeepCopyInto(out *OidcLogoutParameters) {
	*out = *in
	if in.BackchannelLogoutInitiators != nil {
		in, out := &in.BackchannelLogoutInitiators, &out.BackchannelLogoutInitiators
		*out = make([]BackchannelLogoutInitiatorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutUrls != nil {
		in, out := &in.BackchannelLogoutUrls, &out.BackchannelLogoutUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcLogoutParameters.
func (in *OidcLogoutParameters) DeepCopy() *OidcLogoutParameters {
	if in == nil {
		return nil
	}
	out := new(OidcLogoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesInitParameters) DeepCopyInto(out *PoliciesInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesInitParameters.
func (in *PoliciesInitParameters) DeepCopy() *PoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesObservation) DeepCopyInto(out *PoliciesObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesObservation.
func (in *PoliciesObservation) DeepCopy() *PoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(PoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesParameters) DeepCopyInto(out *PoliciesParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesParameters.
func (in *PoliciesParameters) DeepCopy() *PoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefreshTokenInitParameters) DeepCopyInto(out *RefreshTokenInitParameters) {
	*out = *in
	if in.ExpirationType != nil {
		in, out := &in.ExpirationType, &out.ExpirationType
		*out = new(string)
		**out = **in
	}
	if in.IdleTokenLifetime != nil {
		in, out := &in.IdleTokenLifetime, &out.IdleTokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.InfiniteIdleTokenLifetime != nil {
		in, out := &in.InfiniteIdleTokenLifetime, &out.InfiniteIdleTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.InfiniteTokenLifetime != nil {
		in, out := &in.InfiniteTokenLifetime, &out.InfiniteTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.Leeway != nil {
		in, out := &in.Leeway, &out.Leeway
		*out = new(float64)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RotationType != nil {
		in, out := &in.RotationType, &out.RotationType
		*out = new(string)
		**out = **in
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefreshTokenInitParameters.
func (in *RefreshTokenInitParameters) DeepCopy() *RefreshTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(RefreshTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefreshTokenObservation) DeepCopyInto(out *RefreshTokenObservation) {
	*out = *in
	if in.ExpirationType != nil {
		in, out := &in.ExpirationType, &out.ExpirationType
		*out = new(string)
		**out = **in
	}
	if in.IdleTokenLifetime != nil {
		in, out := &in.IdleTokenLifetime, &out.IdleTokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.InfiniteIdleTokenLifetime != nil {
		in, out := &in.InfiniteIdleTokenLifetime, &out.InfiniteIdleTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.InfiniteTokenLifetime != nil {
		in, out := &in.InfiniteTokenLifetime, &out.InfiniteTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.Leeway != nil {
		in, out := &in.Leeway, &out.Leeway
		*out = new(float64)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RotationType != nil {
		in, out := &in.RotationType, &out.RotationType
		*out = new(string)
		**out = **in
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefreshTokenObservation.
func (in *RefreshTokenObservation) DeepCopy() *RefreshTokenObservation {
	if in == nil {
		return nil
	}
	out := new(RefreshTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefreshTokenParameters) DeepCopyInto(out *RefreshTokenParameters) {
	*out = *in
	if in.ExpirationType != nil {
		in, out := &in.ExpirationType, &out.ExpirationType
		*out = new(string)
		**out = **in
	}
	if in.IdleTokenLifetime != nil {
		in, out := &in.IdleTokenLifetime, &out.IdleTokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.InfiniteIdleTokenLifetime != nil {
		in, out := &in.InfiniteIdleTokenLifetime, &out.InfiniteIdleTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.InfiniteTokenLifetime != nil {
		in, out := &in.InfiniteTokenLifetime, &out.InfiniteTokenLifetime
		*out = new(bool)
		**out = **in
	}
	if in.Leeway != nil {
		in, out := &in.Leeway, &out.Leeway
		*out = new(float64)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RotationType != nil {
		in, out := &in.RotationType, &out.RotationType
		*out = new(string)
		**out = **in
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefreshTokenParameters.
func (in *RefreshTokenParameters) DeepCopy() *RefreshTokenParameters {
	if in == nil {
		return nil
	}
	out := new(RefreshTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RmsInitParameters) DeepCopyInto(out *RmsInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RmsInitParameters.
func (in *RmsInitParameters) DeepCopy() *RmsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RmsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RmsObservation) DeepCopyInto(out *RmsObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RmsObservation.
func (in *RmsObservation) DeepCopy() *RmsObservation {
	if in == nil {
		return nil
	}
	out := new(RmsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RmsParameters) DeepCopyInto(out *RmsParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RmsParameters.
func (in *RmsParameters) DeepCopy() *RmsParameters {
	if in == nil {
		return nil
	}
	out := new(RmsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceAPIInitParameters) DeepCopyInto(out *SalesforceAPIInitParameters) {
	*out = *in
	if in.ClientIDSecretRef != nil {
		in, out := &in.ClientIDSecretRef, &out.ClientIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
	if in.PrincipalSecretRef != nil {
		in, out := &in.PrincipalSecretRef, &out.PrincipalSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceAPIInitParameters.
func (in *SalesforceAPIInitParameters) DeepCopy() *SalesforceAPIInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceAPIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceAPIObservation) DeepCopyInto(out *SalesforceAPIObservation) {
	*out = *in
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceAPIObservation.
func (in *SalesforceAPIObservation) DeepCopy() *SalesforceAPIObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceAPIParameters) DeepCopyInto(out *SalesforceAPIParameters) {
	*out = *in
	if in.ClientIDSecretRef != nil {
		in, out := &in.ClientIDSecretRef, &out.ClientIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
	if in.PrincipalSecretRef != nil {
		in, out := &in.PrincipalSecretRef, &out.PrincipalSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceAPIParameters.
func (in *SalesforceAPIParameters) DeepCopy() *SalesforceAPIParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceInitParameters) DeepCopyInto(out *SalesforceInitParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceInitParameters.
func (in *SalesforceInitParameters) DeepCopy() *SalesforceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceObservation) DeepCopyInto(out *SalesforceObservation) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceObservation.
func (in *SalesforceObservation) DeepCopy() *SalesforceObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceParameters) DeepCopyInto(out *SalesforceParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceParameters.
func (in *SalesforceParameters) DeepCopy() *SalesforceParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSandboxAPIInitParameters) DeepCopyInto(out *SalesforceSandboxAPIInitParameters) {
	*out = *in
	if in.ClientIDSecretRef != nil {
		in, out := &in.ClientIDSecretRef, &out.ClientIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
	if in.PrincipalSecretRef != nil {
		in, out := &in.PrincipalSecretRef, &out.PrincipalSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSandboxAPIInitParameters.
func (in *SalesforceSandboxAPIInitParameters) DeepCopy() *SalesforceSandboxAPIInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSandboxAPIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSandboxAPIObservation) DeepCopyInto(out *SalesforceSandboxAPIObservation) {
	*out = *in
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSandboxAPIObservation.
func (in *SalesforceSandboxAPIObservation) DeepCopy() *SalesforceSandboxAPIObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceSandboxAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSandboxAPIParameters) DeepCopyInto(out *SalesforceSandboxAPIParameters) {
	*out = *in
	if in.ClientIDSecretRef != nil {
		in, out := &in.ClientIDSecretRef, &out.ClientIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityName != nil {
		in, out := &in.CommunityName, &out.CommunityName
		*out = new(string)
		**out = **in
	}
	if in.CommunityURLSection != nil {
		in, out := &in.CommunityURLSection, &out.CommunityURLSection
		*out = new(string)
		**out = **in
	}
	if in.PrincipalSecretRef != nil {
		in, out := &in.PrincipalSecretRef, &out.PrincipalSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSandboxAPIParameters.
func (in *SalesforceSandboxAPIParameters) DeepCopy() *SalesforceSandboxAPIParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSandboxAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SamlpInitParameters) DeepCopyInto(out *SamlpInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.AuthnContextClassRef != nil {
		in, out := &in.AuthnContextClassRef, &out.AuthnContextClassRef
		*out = new(string)
		**out = **in
	}
	if in.Binding != nil {
		in, out := &in.Binding, &out.Binding
		*out = new(string)
		**out = **in
	}
	if in.CreateUpnClaim != nil {
		in, out := &in.CreateUpnClaim, &out.CreateUpnClaim
		*out = new(bool)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FlexibleMappings != nil {
		in, out := &in.FlexibleMappings, &out.FlexibleMappings
		*out = new(string)
		**out = **in
	}
	if in.IncludeAttributeNameFormat != nil {
		in, out := &in.IncludeAttributeNameFormat, &out.IncludeAttributeNameFormat
		*out = new(bool)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Logout != nil {
		in, out := &in.Logout, &out.Logout
		*out = make([]LogoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapIdentities != nil {
		in, out := &in.MapIdentities, &out.MapIdentities
		*out = new(bool)
		**out = **in
	}
	if in.MapUnknownClaimsAsIs != nil {
		in, out := &in.MapUnknownClaimsAsIs, &out.MapUnknownClaimsAsIs
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierProbes != nil {
		in, out := &in.NameIdentifierProbes, &out.NameIdentifierProbes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PassthroughClaimsWithNoMapping != nil {
		in, out := &in.PassthroughClaimsWithNoMapping, &out.PassthroughClaimsWithNoMapping
		*out = new(bool)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.SignResponse != nil {
		in, out := &in.SignResponse, &out.SignResponse
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.TypedAttributes != nil {
		in, out := &in.TypedAttributes, &out.TypedAttributes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SamlpInitParameters.
func (in *SamlpInitParameters) DeepCopy() *SamlpInitParameters {
	if in == nil {
		return nil
	}
	out := new(SamlpInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SamlpObservation) DeepCopyInto(out *SamlpObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.AuthnContextClassRef != nil {
		in, out := &in.AuthnContextClassRef, &out.AuthnContextClassRef
		*out = new(string)
		**out = **in
	}
	if in.Binding != nil {
		in, out := &in.Binding, &out.Binding
		*out = new(string)
		**out = **in
	}
	if in.CreateUpnClaim != nil {
		in, out := &in.CreateUpnClaim, &out.CreateUpnClaim
		*out = new(bool)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FlexibleMappings != nil {
		in, out := &in.FlexibleMappings, &out.FlexibleMappings
		*out = new(string)
		**out = **in
	}
	if in.IncludeAttributeNameFormat != nil {
		in, out := &in.IncludeAttributeNameFormat, &out.IncludeAttributeNameFormat
		*out = new(bool)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Logout != nil {
		in, out := &in.Logout, &out.Logout
		*out = make([]LogoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapIdentities != nil {
		in, out := &in.MapIdentities, &out.MapIdentities
		*out = new(bool)
		**out = **in
	}
	if in.MapUnknownClaimsAsIs != nil {
		in, out := &in.MapUnknownClaimsAsIs, &out.MapUnknownClaimsAsIs
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierProbes != nil {
		in, out := &in.NameIdentifierProbes, &out.NameIdentifierProbes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PassthroughClaimsWithNoMapping != nil {
		in, out := &in.PassthroughClaimsWithNoMapping, &out.PassthroughClaimsWithNoMapping
		*out = new(bool)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.SignResponse != nil {
		in, out := &in.SignResponse, &out.SignResponse
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.TypedAttributes != nil {
		in, out := &in.TypedAttributes, &out.TypedAttributes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SamlpObservation.
func (in *SamlpObservation) DeepCopy() *SamlpObservation {
	if in == nil {
		return nil
	}
	out := new(SamlpObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SamlpParameters) DeepCopyInto(out *SamlpParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.AuthnContextClassRef != nil {
		in, out := &in.AuthnContextClassRef, &out.AuthnContextClassRef
		*out = new(string)
		**out = **in
	}
	if in.Binding != nil {
		in, out := &in.Binding, &out.Binding
		*out = new(string)
		**out = **in
	}
	if in.CreateUpnClaim != nil {
		in, out := &in.CreateUpnClaim, &out.CreateUpnClaim
		*out = new(bool)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FlexibleMappings != nil {
		in, out := &in.FlexibleMappings, &out.FlexibleMappings
		*out = new(string)
		**out = **in
	}
	if in.IncludeAttributeNameFormat != nil {
		in, out := &in.IncludeAttributeNameFormat, &out.IncludeAttributeNameFormat
		*out = new(bool)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.LifetimeInSeconds != nil {
		in, out := &in.LifetimeInSeconds, &out.LifetimeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Logout != nil {
		in, out := &in.Logout, &out.Logout
		*out = make([]LogoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapIdentities != nil {
		in, out := &in.MapIdentities, &out.MapIdentities
		*out = new(bool)
		**out = **in
	}
	if in.MapUnknownClaimsAsIs != nil {
		in, out := &in.MapUnknownClaimsAsIs, &out.MapUnknownClaimsAsIs
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierProbes != nil {
		in, out := &in.NameIdentifierProbes, &out.NameIdentifierProbes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PassthroughClaimsWithNoMapping != nil {
		in, out := &in.PassthroughClaimsWithNoMapping, &out.PassthroughClaimsWithNoMapping
		*out = new(bool)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.SignResponse != nil {
		in, out := &in.SignResponse, &out.SignResponse
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.TypedAttributes != nil {
		in, out := &in.TypedAttributes, &out.TypedAttributes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SamlpParameters.
func (in *SamlpParameters) DeepCopy() *SamlpParameters {
	if in == nil {
		return nil
	}
	out := new(SamlpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SapAPIInitParameters) DeepCopyInto(out *SapAPIInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServicePasswordSecretRef != nil {
		in, out := &in.ServicePasswordSecretRef, &out.ServicePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TokenEndpointURL != nil {
		in, out := &in.TokenEndpointURL, &out.TokenEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.UsernameAttribute != nil {
		in, out := &in.UsernameAttribute, &out.UsernameAttribute
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SapAPIInitParameters.
func (in *SapAPIInitParameters) DeepCopy() *SapAPIInitParameters {
	if in == nil {
		return nil
	}
	out := new(SapAPIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SapAPIObservation) DeepCopyInto(out *SapAPIObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpointURL != nil {
		in, out := &in.TokenEndpointURL, &out.TokenEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.UsernameAttribute != nil {
		in, out := &in.UsernameAttribute, &out.UsernameAttribute
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SapAPIObservation.
func (in *SapAPIObservation) DeepCopy() *SapAPIObservation {
	if in == nil {
		return nil
	}
	out := new(SapAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SapAPIParameters) DeepCopyInto(out *SapAPIParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.NameIdentifierFormat != nil {
		in, out := &in.NameIdentifierFormat, &out.NameIdentifierFormat
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServicePasswordSecretRef != nil {
		in, out := &in.ServicePasswordSecretRef, &out.ServicePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TokenEndpointURL != nil {
		in, out := &in.TokenEndpointURL, &out.TokenEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.UsernameAttribute != nil {
		in, out := &in.UsernameAttribute, &out.UsernameAttribute
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SapAPIParameters.
func (in *SapAPIParameters) DeepCopy() *SapAPIParameters {
	if in == nil {
		return nil
	}
	out := new(SapAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentryInitParameters) DeepCopyInto(out *SentryInitParameters) {
	*out = *in
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.OrgSlug != nil {
		in, out := &in.OrgSlug, &out.OrgSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentryInitParameters.
func (in *SentryInitParameters) DeepCopy() *SentryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SentryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentryObservation) DeepCopyInto(out *SentryObservation) {
	*out = *in
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.OrgSlug != nil {
		in, out := &in.OrgSlug, &out.OrgSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentryObservation.
func (in *SentryObservation) DeepCopy() *SentryObservation {
	if in == nil {
		return nil
	}
	out := new(SentryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentryParameters) DeepCopyInto(out *SentryParameters) {
	*out = *in
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.OrgSlug != nil {
		in, out := &in.OrgSlug, &out.OrgSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentryParameters.
func (in *SentryParameters) DeepCopy() *SentryParameters {
	if in == nil {
		return nil
	}
	out := new(SentryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionTransferInitParameters) DeepCopyInto(out *SessionTransferInitParameters) {
	*out = *in
	if in.AllowRefreshToken != nil {
		in, out := &in.AllowRefreshToken, &out.AllowRefreshToken
		*out = new(bool)
		**out = **in
	}
	if in.AllowedAuthenticationMethods != nil {
		in, out := &in.AllowedAuthenticationMethods, &out.AllowedAuthenticationMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CanCreateSessionTransferToken != nil {
		in, out := &in.CanCreateSessionTransferToken, &out.CanCreateSessionTransferToken
		*out = new(bool)
		**out = **in
	}
	if in.EnforceDeviceBinding != nil {
		in, out := &in.EnforceDeviceBinding, &out.EnforceDeviceBinding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionTransferInitParameters.
func (in *SessionTransferInitParameters) DeepCopy() *SessionTransferInitParameters {
	if in == nil {
		return nil
	}
	out := new(SessionTransferInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionTransferObservation) DeepCopyInto(out *SessionTransferObservation) {
	*out = *in
	if in.AllowRefreshToken != nil {
		in, out := &in.AllowRefreshToken, &out.AllowRefreshToken
		*out = new(bool)
		**out = **in
	}
	if in.AllowedAuthenticationMethods != nil {
		in, out := &in.AllowedAuthenticationMethods, &out.AllowedAuthenticationMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CanCreateSessionTransferToken != nil {
		in, out := &in.CanCreateSessionTransferToken, &out.CanCreateSessionTransferToken
		*out = new(bool)
		**out = **in
	}
	if in.EnforceDeviceBinding != nil {
		in, out := &in.EnforceDeviceBinding, &out.EnforceDeviceBinding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionTransferObservation.
func (in *SessionTransferObservation) DeepCopy() *SessionTransferObservation {
	if in == nil {
		return nil
	}
	out := new(SessionTransferObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionTransferParameters) DeepCopyInto(out *SessionTransferParameters) {
	*out = *in
	if in.AllowRefreshToken != nil {
		in, out := &in.AllowRefreshToken, &out.AllowRefreshToken
		*out = new(bool)
		**out = **in
	}
	if in.AllowedAuthenticationMethods != nil {
		in, out := &in.AllowedAuthenticationMethods, &out.AllowedAuthenticationMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CanCreateSessionTransferToken != nil {
		in, out := &in.CanCreateSessionTransferToken, &out.CanCreateSessionTransferToken
		*out = new(bool)
		**out = **in
	}
	if in.EnforceDeviceBinding != nil {
		in, out := &in.EnforceDeviceBinding, &out.EnforceDeviceBinding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionTransferParameters.
func (in *SessionTransferParameters) DeepCopy() *SessionTransferParameters {
	if in == nil {
		return nil
	}
	out := new(SessionTransferParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharepointInitParameters) DeepCopyInto(out *SharepointInitParameters) {
	*out = *in
	if in.ExternalURL != nil {
		in, out := &in.ExternalURL, &out.ExternalURL
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharepointInitParameters.
func (in *SharepointInitParameters) DeepCopy() *SharepointInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharepointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharepointObservation) DeepCopyInto(out *SharepointObservation) {
	*out = *in
	if in.ExternalURL != nil {
		in, out := &in.ExternalURL, &out.ExternalURL
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharepointObservation.
func (in *SharepointObservation) DeepCopy() *SharepointObservation {
	if in == nil {
		return nil
	}
	out := new(SharepointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharepointParameters) DeepCopyInto(out *SharepointParameters) {
	*out = *in
	if in.ExternalURL != nil {
		in, out := &in.ExternalURL, &out.ExternalURL
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharepointParameters.
func (in *SharepointParameters) DeepCopy() *SharepointParameters {
	if in == nil {
		return nil
	}
	out := new(SharepointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackInitParameters) DeepCopyInto(out *SlackInitParameters) {
	*out = *in
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackInitParameters.
func (in *SlackInitParameters) DeepCopy() *SlackInitParameters {
	if in == nil {
		return nil
	}
	out := new(SlackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackObservation) DeepCopyInto(out *SlackObservation) {
	*out = *in
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackObservation.
func (in *SlackObservation) DeepCopy() *SlackObservation {
	if in == nil {
		return nil
	}
	out := new(SlackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlackParameters) DeepCopyInto(out *SlackParameters) {
	*out = *in
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlackParameters.
func (in *SlackParameters) DeepCopy() *SlackParameters {
	if in == nil {
		return nil
	}
	out := new(SlackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringcmInitParameters) DeepCopyInto(out *SpringcmInitParameters) {
	*out = *in
	if in.AcsURL != nil {
		in, out := &in.AcsURL, &out.AcsURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringcmInitParameters.
func (in *SpringcmInitParameters) DeepCopy() *SpringcmInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringcmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringcmObservation) DeepCopyInto(out *SpringcmObservation) {
	*out = *in
	if in.AcsURL != nil {
		in, out := &in.AcsURL, &out.AcsURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringcmObservation.
func (in *SpringcmObservation) DeepCopy() *SpringcmObservation {
	if in == nil {
		return nil
	}
	out := new(SpringcmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringcmParameters) DeepCopyInto(out *SpringcmParameters) {
	*out = *in
	if in.AcsURL != nil {
		in, out := &in.AcsURL, &out.AcsURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringcmParameters.
func (in *SpringcmParameters) DeepCopy() *SpringcmParameters {
	if in == nil {
		return nil
	}
	out := new(SpringcmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoIntegrationInitParameters) DeepCopyInto(out *SsoIntegrationInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoIntegrationInitParameters.
func (in *SsoIntegrationInitParameters) DeepCopy() *SsoIntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SsoIntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoIntegrationObservation) DeepCopyInto(out *SsoIntegrationObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoIntegrationObservation.
func (in *SsoIntegrationObservation) DeepCopy() *SsoIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(SsoIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoIntegrationParameters) DeepCopyInto(out *SsoIntegrationParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoIntegrationParameters.
func (in *SsoIntegrationParameters) DeepCopy() *SsoIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(SsoIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeInitParameters) DeepCopyInto(out *TokenExchangeInitParameters) {
	*out = *in
	if in.AllowAnyProfileOfType != nil {
		in, out := &in.AllowAnyProfileOfType, &out.AllowAnyProfileOfType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeInitParameters.
func (in *TokenExchangeInitParameters) DeepCopy() *TokenExchangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeObservation) DeepCopyInto(out *TokenExchangeObservation) {
	*out = *in
	if in.AllowAnyProfileOfType != nil {
		in, out := &in.AllowAnyProfileOfType, &out.AllowAnyProfileOfType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeObservation.
func (in *TokenExchangeObservation) DeepCopy() *TokenExchangeObservation {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeParameters) DeepCopyInto(out *TokenExchangeParameters) {
	*out = *in
	if in.AllowAnyProfileOfType != nil {
		in, out := &in.AllowAnyProfileOfType, &out.AllowAnyProfileOfType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeParameters.
func (in *TokenExchangeParameters) DeepCopy() *TokenExchangeParameters {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenQuotaInitParameters) DeepCopyInto(out *TokenQuotaInitParameters) {
	*out = *in
	if in.ClientCredentials != nil {
		in, out := &in.ClientCredentials, &out.ClientCredentials
		*out = make([]ClientCredentialsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenQuotaInitParameters.
func (in *TokenQuotaInitParameters) DeepCopy() *TokenQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenQuotaObservation) DeepCopyInto(out *TokenQuotaObservation) {
	*out = *in
	if in.ClientCredentials != nil {
		in, out := &in.ClientCredentials, &out.ClientCredentials
		*out = make([]ClientCredentialsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenQuotaObservation.
func (in *TokenQuotaObservation) DeepCopy() *TokenQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(TokenQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenQuotaParameters) DeepCopyInto(out *TokenQuotaParameters) {
	*out = *in
	if in.ClientCredentials != nil {
		in, out := &in.ClientCredentials, &out.ClientCredentials
		*out = make([]ClientCredentialsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenQuotaParameters.
func (in *TokenQuotaParameters) DeepCopy() *TokenQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(TokenQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WamsInitParameters) DeepCopyInto(out *WamsInitParameters) {
	*out = *in
	if in.MasterKeySecretRef != nil {
		in, out := &in.MasterKeySecretRef, &out.MasterKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WamsInitParameters.
func (in *WamsInitParameters) DeepCopy() *WamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WamsObservation) DeepCopyInto(out *WamsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WamsObservation.
func (in *WamsObservation) DeepCopy() *WamsObservation {
	if in == nil {
		return nil
	}
	out := new(WamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WamsParameters) DeepCopyInto(out *WamsParameters) {
	*out = *in
	if in.MasterKeySecretRef != nil {
		in, out := &in.MasterKeySecretRef, &out.MasterKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WamsParameters.
func (in *WamsParameters) DeepCopy() *WamsParameters {
	if in == nil {
		return nil
	}
	out := new(WamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WsfedInitParameters) DeepCopyInto(out *WsfedInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WsfedInitParameters.
func (in *WsfedInitParameters) DeepCopy() *WsfedInitParameters {
	if in == nil {
		return nil
	}
	out := new(WsfedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WsfedObservation) DeepCopyInto(out *WsfedObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WsfedObservation.
func (in *WsfedObservation) DeepCopy() *WsfedObservation {
	if in == nil {
		return nil
	}
	out := new(WsfedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WsfedParameters) DeepCopyInto(out *WsfedParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WsfedParameters.
func (in *WsfedParameters) DeepCopy() *WsfedParameters {
	if in == nil {
		return nil
	}
	out := new(WsfedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZendeskInitParameters) DeepCopyInto(out *ZendeskInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZendeskInitParameters.
func (in *ZendeskInitParameters) DeepCopy() *ZendeskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZendeskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZendeskObservation) DeepCopyInto(out *ZendeskObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZendeskObservation.
func (in *ZendeskObservation) DeepCopy() *ZendeskObservation {
	if in == nil {
		return nil
	}
	out := new(ZendeskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZendeskParameters) DeepCopyInto(out *ZendeskParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZendeskParameters.
func (in *ZendeskParameters) DeepCopy() *ZendeskParameters {
	if in == nil {
		return nil
	}
	out := new(ZendeskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoomInitParameters) DeepCopyInto(out *ZoomInitParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoomInitParameters.
func (in *ZoomInitParameters) DeepCopy() *ZoomInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoomInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoomObservation) DeepCopyInto(out *ZoomObservation) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoomObservation.
func (in *ZoomObservation) DeepCopy() *ZoomObservation {
	if in == nil {
		return nil
	}
	out := new(ZoomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoomParameters) DeepCopyInto(out *ZoomParameters) {
	*out = *in
	if in.Account != nil {
		in, out := &in.Account, &out.Account
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoomParameters.
func (in *ZoomParameters) DeepCopy() *ZoomParameters {
	if in == nil {
		return nil
	}
	out := new(ZoomParameters)
	in.DeepCopyInto(out)
	return out
}
